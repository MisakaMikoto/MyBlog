<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

       <jdbc:embedded-database id="dataSource"/>
       <!-- 일반적인 MyBatis-Spring 사용시에는 SqlSessionFactoryBean 혹은 상응하는 SqlSessionFactory 를 직접 사용할일은 없을것이다. 대신 세션 팩토리는 MapperFactoryBeans나 다른 DAO들(SqlSessionDaoSupport을 상속받은)에게 인젝트 될것이다. -->
       <!-- mybatis sql session template -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource" />
              <property name="mapperLocations" value="classpath*:/mybatis/*/*Mapper.xml" />
              <property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
       </bean>

       <!-- mybatis mapper auto scanning -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="com.ryuha.blog" />
       </bean>

       <!-- 이것은 MyBatis-Spring의 심장이다. 이 클래스는 MyBatis SQL method들을 호출하면서 예외들을 전환하면서 MyBatis SqlSession 들을 관리하는 책임이 있다. SqlSessionTemplate 은 쓰레드 안전하고 여러 DAO들 사이에서 공유 가능하다.
  getMapper() 호출로 얻은 맵퍼의 SQL 메서드들을 호출할때, SqlSessionTemplate 은 SqlSession 이 현재 스프링 트랜잭션에 연관된 것임을 보장할것이다. 또한, 필요에 따라 세션의 종료, 커밋, 롤벡을 포함하는 세션 생명주기를 관리한다.
  SqlSessionTemplate 은 SqlSession을 구현하고 있는데, 코드에 존재하는 기존 SqlSession 사용에 대해 간단히 교체 된다. 기본 MyBatis 구현인 DefaultSqlSession 대신 SqlSessionTemplate이 항상 사용되어져야 하는데 스프링 트랜잭션에 템플릿이 참가 가능하고 여러개의 인젝트 되어진 맵퍼 클래스에 의해 사용될때 쓰레드 안전하기 때문이다. 동일 어플리케이션에서 이 두가지 클래스(DefaultSqlSession 과 SqlSessionTemplate)를 혼용하는것은 데이터 무결성 문제를 야기할수 있다.-->
       <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
              <constructor-arg index="0" ref="sqlSessionFactory" />
              <constructor-arg index="1" value="BATCH" />
       </bean>
</beans>